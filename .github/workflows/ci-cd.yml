name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch: # UmoÅ¼liwia manualne uruchomienie

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --force

      - name: Run linter
        run: npm run lint

      - name: Check formatting
        run: npm run format -- --check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Run unit tests
        run: npm run test:run

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      TEST_USER_EMAIL: test@example.com
      TEST_USER_PASSWORD: testpassword123
      ADMIN_USER_EMAIL: admin@example.com
      ADMIN_USER_PASSWORD: adminpassword123
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Install Playwright browsers
        run: npx playwright install chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: Production Build
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests]
    env:
      NODE_ENV: production
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Build for production
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  deploy-ready:
    name: Deploy Ready Check
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests, e2e-tests, build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    env:
      NODE_ENV: production
    steps:
      - name: All checks passed
        run: |
          echo "ðŸŽ‰ All quality checks, tests, and build completed successfully!"
          echo "âœ… Linting passed"
          echo "âœ… Unit tests passed"
          echo "âœ… E2E tests passed"
          echo "âœ… Production build successful"
          echo "ðŸš€ Ready for deployment!"
